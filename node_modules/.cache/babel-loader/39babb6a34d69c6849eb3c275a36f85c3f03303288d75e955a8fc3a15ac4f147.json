{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shantanu\\\\Desktop\\\\Intern-Project\\\\src\\\\pages\\\\MyComponents.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport data from \"../data.json\"; // Adjust the path as needed\nimport \"./MyComponent.css\"; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pagination({\n  currentPage,\n  itemsPerPage,\n  totalItems,\n  onPageChange\n}) {\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\n  const handlePageChange = page => {\n    if (page >= 1 && page <= totalPages) {\n      onPageChange(page);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagination absolute bottom-0 border border-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(currentPage - 1),\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Page \", currentPage, \" of \", totalPages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handlePageChange(currentPage + 1),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = Pagination;\nfunction MyComponent() {\n  _s();\n  const [values, setValues] = useState(data);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 10; // Number of items to display per page\n  const scrollRefs = {}; // Store refs for each rendered value\n\n  const toggleValue = key => {\n    setValues(prevValues => ({\n      ...prevValues,\n      [key]: !prevValues[key]\n    }));\n  };\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n    setCurrentPage(1); // Reset page when search term changes\n  };\n\n  const filteredValues = Object.keys(values).filter(key => key.toLowerCase().includes(searchTerm.toLowerCase()));\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const endIndex = startIndex + itemsPerPage;\n  const paginatedValues = filteredValues.slice(startIndex, endIndex);\n  const renderedValues = paginatedValues.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref => scrollRefs[key] = ref,\n    children: [key, \": \", values[key] ? \"True\" : \"False\", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleValue(key),\n      children: \"Toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, key, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchTerm,\n      onChange: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), renderedValues, /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      itemsPerPage: itemsPerPage,\n      totalItems: filteredValues.length,\n      onPageChange: setCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(MyComponent, \"9lNXftMdRmPlYeLYrNaPCPhiGzM=\");\n_c2 = MyComponent;\nexport default MyComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"Pagination\");\n$RefreshReg$(_c2, \"MyComponent\");","map":{"version":3,"names":["React","useState","data","jsxDEV","_jsxDEV","Pagination","currentPage","itemsPerPage","totalItems","onPageChange","totalPages","Math","ceil","handlePageChange","page","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","MyComponent","_s","values","setValues","searchTerm","setSearchTerm","setCurrentPage","scrollRefs","toggleValue","key","prevValues","handleSearch","event","target","value","filteredValues","Object","keys","filter","toLowerCase","includes","startIndex","endIndex","paginatedValues","slice","renderedValues","map","ref","type","placeholder","onChange","length","_c2","$RefreshReg$"],"sources":["C:/Users/Shantanu/Desktop/Intern-Project/src/pages/MyComponents.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport data from \"../data.json\"; // Adjust the path as needed\r\nimport \"./MyComponent.css\"; // Import your CSS file for styling\r\n\r\nfunction Pagination({ currentPage, itemsPerPage, totalItems, onPageChange }) {\r\n  const totalPages = Math.ceil(totalItems / itemsPerPage);\r\n\r\n  const handlePageChange = (page) => {\r\n    if (page >= 1 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination absolute bottom-0 border border-black\">\r\n      <button onClick={() => handlePageChange(currentPage - 1)}>\r\n        Previous\r\n      </button>\r\n      <span>\r\n        Page {currentPage} of {totalPages}\r\n      </span>\r\n      <button onClick={() => handlePageChange(currentPage + 1)}>Next</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MyComponent() {\r\n  const [values, setValues] = useState(data);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const itemsPerPage = 10; // Number of items to display per page\r\n  const scrollRefs = {}; // Store refs for each rendered value\r\n\r\n  const toggleValue = (key) => {\r\n    setValues((prevValues) => ({\r\n      ...prevValues,\r\n      [key]: !prevValues[key],\r\n    }));\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n    setCurrentPage(1); // Reset page when search term changes\r\n  };\r\n\r\n  const filteredValues = Object.keys(values).filter((key) =>\r\n    key.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const startIndex = (currentPage - 1) * itemsPerPage;\r\n  const endIndex = startIndex + itemsPerPage;\r\n  const paginatedValues = filteredValues.slice(startIndex, endIndex);\r\n\r\n  const renderedValues = paginatedValues.map((key) => (\r\n    <div key={key} ref={(ref) => (scrollRefs[key] = ref)}>\r\n      {key}: {values[key] ? \"True\" : \"False\"}\r\n      <button onClick={() => toggleValue(key)}>Toggle</button>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={searchTerm}\r\n        onChange={handleSearch}\r\n      />\r\n      {renderedValues}\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        itemsPerPage={itemsPerPage}\r\n        totalItems={filteredValues.length}\r\n        onPageChange={setCurrentPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}